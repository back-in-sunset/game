// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package commentclient

import (
	"context"

	"comment/rpc/pb/comment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuditCommentRequest       = comment.AuditCommentRequest
	AuditCommentResponse      = comment.AuditCommentResponse
	BlockCommentRequest       = comment.BlockCommentRequest
	BlockCommentResponse      = comment.BlockCommentResponse
	CommentListRequest        = comment.CommentListRequest
	CommentListResponse       = comment.CommentListResponse
	CommentRequest            = comment.CommentRequest
	CommentResponse           = comment.CommentResponse
	DeleteCommentRequest      = comment.DeleteCommentRequest
	DeleteCommentResponse     = comment.DeleteCommentResponse
	LikeCommentRequest        = comment.LikeCommentRequest
	LikeCommentResponse       = comment.LikeCommentResponse
	SetCommentAttrsRequest    = comment.SetCommentAttrsRequest
	SetCommentAttrsResponse   = comment.SetCommentAttrsResponse
	UnAuditCommentRequest     = comment.UnAuditCommentRequest
	UnAuditCommentResponse    = comment.UnAuditCommentResponse
	UnBlockCommentRequest     = comment.UnBlockCommentRequest
	UnBlockCommentResponse    = comment.UnBlockCommentResponse
	UnLikeCommentRequest      = comment.UnLikeCommentRequest
	UnLikeCommentResponse     = comment.UnLikeCommentResponse
	UnSetCommentAttrsRequest  = comment.UnSetCommentAttrsRequest
	UnSetCommentAttrsResponse = comment.UnSetCommentAttrsResponse

	Comment interface {
		// 添加评论
		AddComment(ctx context.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentResponse, error)
		// 删除评论
		DeleteComment(ctx context.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentResponse, error)
		// 获取评论
		GetComment(ctx context.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentResponse, error)
		// 获取评论列表
		GetCommentList(ctx context.Context, in *CommentListRequest, opts ...grpc.CallOption) (*CommentListResponse, error)
		// 评论点赞
		LikeComment(ctx context.Context, in *LikeCommentRequest, opts ...grpc.CallOption) (*LikeCommentResponse, error)
		// 评论取消点赞
		UnLikeComment(ctx context.Context, in *UnLikeCommentRequest, opts ...grpc.CallOption) (*UnLikeCommentResponse, error)
		// 评论屏蔽
		BlockComment(ctx context.Context, in *BlockCommentRequest, opts ...grpc.CallOption) (*BlockCommentResponse, error)
		// 评论取消屏蔽
		UnBlockComment(ctx context.Context, in *UnBlockCommentRequest, opts ...grpc.CallOption) (*UnBlockCommentResponse, error)
		// 评论置顶
		SetCommentAttrs(ctx context.Context, in *SetCommentAttrsRequest, opts ...grpc.CallOption) (*SetCommentAttrsResponse, error)
		// 评论取消置顶
		UnSetCommentAttrs(ctx context.Context, in *UnSetCommentAttrsRequest, opts ...grpc.CallOption) (*UnSetCommentAttrsResponse, error)
	}

	defaultComment struct {
		cli zrpc.Client
	}
)

func NewComment(cli zrpc.Client) Comment {
	return &defaultComment{
		cli: cli,
	}
}

// 添加评论
func (m *defaultComment) AddComment(ctx context.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.AddComment(ctx, in, opts...)
}

// 删除评论
func (m *defaultComment) DeleteComment(ctx context.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.DeleteComment(ctx, in, opts...)
}

// 获取评论
func (m *defaultComment) GetComment(ctx context.Context, in *CommentRequest, opts ...grpc.CallOption) (*CommentResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.GetComment(ctx, in, opts...)
}

// 获取评论列表
func (m *defaultComment) GetCommentList(ctx context.Context, in *CommentListRequest, opts ...grpc.CallOption) (*CommentListResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.GetCommentList(ctx, in, opts...)
}

// 评论点赞
func (m *defaultComment) LikeComment(ctx context.Context, in *LikeCommentRequest, opts ...grpc.CallOption) (*LikeCommentResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.LikeComment(ctx, in, opts...)
}

// 评论取消点赞
func (m *defaultComment) UnLikeComment(ctx context.Context, in *UnLikeCommentRequest, opts ...grpc.CallOption) (*UnLikeCommentResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.UnLikeComment(ctx, in, opts...)
}

// 评论屏蔽
func (m *defaultComment) BlockComment(ctx context.Context, in *BlockCommentRequest, opts ...grpc.CallOption) (*BlockCommentResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.BlockComment(ctx, in, opts...)
}

// 评论取消屏蔽
func (m *defaultComment) UnBlockComment(ctx context.Context, in *UnBlockCommentRequest, opts ...grpc.CallOption) (*UnBlockCommentResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.UnBlockComment(ctx, in, opts...)
}

// 评论置顶
func (m *defaultComment) SetCommentAttrs(ctx context.Context, in *SetCommentAttrsRequest, opts ...grpc.CallOption) (*SetCommentAttrsResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.SetCommentAttrs(ctx, in, opts...)
}

// 评论取消置顶
func (m *defaultComment) UnSetCommentAttrs(ctx context.Context, in *UnSetCommentAttrsRequest, opts ...grpc.CallOption) (*UnSetCommentAttrsResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.UnSetCommentAttrs(ctx, in, opts...)
}
