// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package server

import (
	"context"

	"comment/rpc/internal/logic"
	"comment/rpc/internal/svc"
	"comment/rpc/pb/comment"
)

type CommentServer struct {
	svcCtx *svc.ServiceContext
	comment.UnimplementedCommentServer
}

func NewCommentServer(svcCtx *svc.ServiceContext) *CommentServer {
	return &CommentServer{
		svcCtx: svcCtx,
	}
}

// 添加评论
func (s *CommentServer) AddComment(ctx context.Context, in *comment.CommentRequest) (*comment.CommentResponse, error) {
	l := logic.NewAddCommentLogic(ctx, s.svcCtx)
	return l.AddComment(in)
}

// 删除评论
func (s *CommentServer) DeleteComment(ctx context.Context, in *comment.CommentRequest) (*comment.CommentResponse, error) {
	l := logic.NewDeleteCommentLogic(ctx, s.svcCtx)
	return l.DeleteComment(in)
}

// 获取评论
func (s *CommentServer) GetComment(ctx context.Context, in *comment.CommentRequest) (*comment.CommentResponse, error) {
	l := logic.NewGetCommentLogic(ctx, s.svcCtx)
	return l.GetComment(in)
}

// 获取评论列表
func (s *CommentServer) GetCommentList(ctx context.Context, in *comment.CommentListRequest) (*comment.CommentListResponse, error) {
	l := logic.NewGetCommentListLogic(ctx, s.svcCtx)
	return l.GetCommentList(in)
}

// 评论点赞
func (s *CommentServer) LikeComment(ctx context.Context, in *comment.LikeCommentRequest) (*comment.LikeCommentResponse, error) {
	l := logic.NewLikeCommentLogic(ctx, s.svcCtx)
	return l.LikeComment(in)
}

// 评论取消点赞
func (s *CommentServer) UnLikeComment(ctx context.Context, in *comment.UnLikeCommentRequest) (*comment.UnLikeCommentResponse, error) {
	l := logic.NewUnLikeCommentLogic(ctx, s.svcCtx)
	return l.UnLikeComment(in)
}

// 评论屏蔽
func (s *CommentServer) BlockComment(ctx context.Context, in *comment.BlockCommentRequest) (*comment.BlockCommentResponse, error) {
	l := logic.NewBlockCommentLogic(ctx, s.svcCtx)
	return l.BlockComment(in)
}

// 评论取消屏蔽
func (s *CommentServer) UnBlockComment(ctx context.Context, in *comment.UnBlockCommentRequest) (*comment.UnBlockCommentResponse, error) {
	l := logic.NewUnBlockCommentLogic(ctx, s.svcCtx)
	return l.UnBlockComment(in)
}

// 评论置顶
func (s *CommentServer) SetCommentAttrs(ctx context.Context, in *comment.SetCommentAttrsRequest) (*comment.SetCommentAttrsResponse, error) {
	l := logic.NewSetCommentAttrsLogic(ctx, s.svcCtx)
	return l.SetCommentAttrs(in)
}

// 评论取消置顶
func (s *CommentServer) UnSetCommentAttrs(ctx context.Context, in *comment.UnSetCommentAttrsRequest) (*comment.UnSetCommentAttrsResponse, error) {
	l := logic.NewUnSetCommentAttrsLogic(ctx, s.svcCtx)
	return l.UnSetCommentAttrs(in)
}
