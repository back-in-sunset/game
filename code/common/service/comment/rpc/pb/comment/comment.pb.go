// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.4
// source: rpc/comment.proto

package comment

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户评论
type CommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId       uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`            // 评论对象ID
	ObjType     uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`        // 评论对象类型
	MemberId    uint64 `protobuf:"varint,3,opt,name=MemberId,proto3" json:"MemberId,omitempty"`      // 作者用户ID
	CommentId   uint64 `protobuf:"varint,4,opt,name=CommentId,proto3" json:"CommentId,omitempty"`    // 同评论indx_id
	AtMemberIds string `protobuf:"bytes,5,opt,name=AtMemberIds,proto3" json:"AtMemberIds,omitempty"` // at用户ID列表
	Ip          string `protobuf:"bytes,6,opt,name=Ip,proto3" json:"Ip,omitempty"`                   // 评论IP
	Platform    uint64 `protobuf:"varint,7,opt,name=Platform,proto3" json:"Platform,omitempty"`      // 评论平台
	Device      string `protobuf:"bytes,8,opt,name=Device,proto3" json:"Device,omitempty"`           // 评论设备
	Massage     string `protobuf:"bytes,9,opt,name=Massage,proto3" json:"Massage,omitempty"`         // 评论内容
	Meta        string `protobuf:"bytes,10,opt,name=Meta,proto3" json:"Meta,omitempty"`              // 评论元数据 背景 字体
	ReplyId     uint64 `protobuf:"varint,11,opt,name=ReplyId,proto3" json:"ReplyId,omitempty"`       // 被回复的评论ID
	State       uint64 `protobuf:"varint,12,opt,name=State,proto3" json:"State,omitempty"`           // 评论状态 0-正常, 1-隐藏
}

func (x *CommentRequest) Reset() {
	*x = CommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentRequest) ProtoMessage() {}

func (x *CommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentRequest.ProtoReflect.Descriptor instead.
func (*CommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{0}
}

func (x *CommentRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *CommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *CommentRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CommentRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentRequest) GetAtMemberIds() string {
	if x != nil {
		return x.AtMemberIds
	}
	return ""
}

func (x *CommentRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CommentRequest) GetPlatform() uint64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *CommentRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *CommentRequest) GetMassage() string {
	if x != nil {
		return x.Massage
	}
	return ""
}

func (x *CommentRequest) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *CommentRequest) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *CommentRequest) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 评论响应
type CommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId uint64 `protobuf:"varint,1,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
}

func (x *CommentResponse) Reset() {
	*x = CommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentResponse) ProtoMessage() {}

func (x *CommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentResponse.ProtoReflect.Descriptor instead.
func (*CommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CommentResponse) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

// 评论列表请求
type CommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	MemberId  uint64 `protobuf:"varint,3,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 作者用户ID
	CommentId uint64 `protobuf:"varint,4,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // page索引ID
	PageSize  uint64 `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`   // 页大小
	OrderBy   uint64 `protobuf:"varint,6,opt,name=OrderBy,proto3" json:"OrderBy,omitempty"`     // 排序方式 0-默认, 1-点赞数, 2-评论时间
	State     uint64 `protobuf:"varint,7,opt,name=State,proto3" json:"State,omitempty"`         // 评论状态 0-正常, 1-隐藏
}

func (x *CommentListRequest) Reset() {
	*x = CommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListRequest) ProtoMessage() {}

func (x *CommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListRequest.ProtoReflect.Descriptor instead.
func (*CommentListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{2}
}

func (x *CommentListRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *CommentListRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *CommentListRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CommentListRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentListRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CommentListRequest) GetOrderBy() uint64 {
	if x != nil {
		return x.OrderBy
	}
	return 0
}

func (x *CommentListRequest) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

// 评论列表响应
type CommentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*CommentResponse `protobuf:"bytes,1,rep,name=Comments,proto3" json:"Comments,omitempty"` // 评论列表
	Total    uint64             `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`      // 总数
}

func (x *CommentListResponse) Reset() {
	*x = CommentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResponse) ProtoMessage() {}

func (x *CommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResponse.ProtoReflect.Descriptor instead.
func (*CommentListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{3}
}

func (x *CommentListResponse) GetComments() []*CommentResponse {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *CommentListResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 删除评论请求
type DeleteCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCommentRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *DeleteCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *DeleteCommentRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *DeleteCommentRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 删除评论响应
type DeleteCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论点赞
type LikeCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
}

func (x *LikeCommentRequest) Reset() {
	*x = LikeCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentRequest) ProtoMessage() {}

func (x *LikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentRequest.ProtoReflect.Descriptor instead.
func (*LikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{6}
}

func (x *LikeCommentRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *LikeCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *LikeCommentRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *LikeCommentRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 评论点赞响应
type LikeCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *LikeCommentResponse) Reset() {
	*x = LikeCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentResponse) ProtoMessage() {}

func (x *LikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentResponse.ProtoReflect.Descriptor instead.
func (*LikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{7}
}

func (x *LikeCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LikeCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论取消点赞请求
type UnLikeCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
}

func (x *UnLikeCommentRequest) Reset() {
	*x = UnLikeCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLikeCommentRequest) ProtoMessage() {}

func (x *UnLikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLikeCommentRequest.ProtoReflect.Descriptor instead.
func (*UnLikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{8}
}

func (x *UnLikeCommentRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *UnLikeCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *UnLikeCommentRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *UnLikeCommentRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 评论取消点赞响应
type UnLikeCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *UnLikeCommentResponse) Reset() {
	*x = UnLikeCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnLikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLikeCommentResponse) ProtoMessage() {}

func (x *UnLikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLikeCommentResponse.ProtoReflect.Descriptor instead.
func (*UnLikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{9}
}

func (x *UnLikeCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnLikeCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论举报请求
type ReportCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
	Reason    string `protobuf:"bytes,5,opt,name=Reason,proto3" json:"Reason,omitempty"`        // 举报原因
}

func (x *ReportCommentRequest) Reset() {
	*x = ReportCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCommentRequest) ProtoMessage() {}

func (x *ReportCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCommentRequest.ProtoReflect.Descriptor instead.
func (*ReportCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{10}
}

func (x *ReportCommentRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *ReportCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *ReportCommentRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ReportCommentRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ReportCommentRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 评论举报响应
type ReportCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *ReportCommentResponse) Reset() {
	*x = ReportCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportCommentResponse) ProtoMessage() {}

func (x *ReportCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportCommentResponse.ProtoReflect.Descriptor instead.
func (*ReportCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{11}
}

func (x *ReportCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论屏蔽请求
type BlockCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
}

func (x *BlockCommentRequest) Reset() {
	*x = BlockCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockCommentRequest) ProtoMessage() {}

func (x *BlockCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockCommentRequest.ProtoReflect.Descriptor instead.
func (*BlockCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{12}
}

func (x *BlockCommentRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *BlockCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *BlockCommentRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *BlockCommentRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 评论屏蔽响应
type BlockCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *BlockCommentResponse) Reset() {
	*x = BlockCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockCommentResponse) ProtoMessage() {}

func (x *BlockCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockCommentResponse.ProtoReflect.Descriptor instead.
func (*BlockCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{13}
}

func (x *BlockCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BlockCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论取消屏蔽请求
type UnBlockCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
}

func (x *UnBlockCommentRequest) Reset() {
	*x = UnBlockCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBlockCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBlockCommentRequest) ProtoMessage() {}

func (x *UnBlockCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBlockCommentRequest.ProtoReflect.Descriptor instead.
func (*UnBlockCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{14}
}

func (x *UnBlockCommentRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *UnBlockCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *UnBlockCommentRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *UnBlockCommentRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 评论取消屏蔽响应
type UnBlockCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *UnBlockCommentResponse) Reset() {
	*x = UnBlockCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnBlockCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBlockCommentResponse) ProtoMessage() {}

func (x *UnBlockCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBlockCommentResponse.ProtoReflect.Descriptor instead.
func (*UnBlockCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{15}
}

func (x *UnBlockCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnBlockCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 通过评论审核请求
type AuditCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
}

func (x *AuditCommentRequest) Reset() {
	*x = AuditCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditCommentRequest) ProtoMessage() {}

func (x *AuditCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditCommentRequest.ProtoReflect.Descriptor instead.
func (*AuditCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{16}
}

func (x *AuditCommentRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *AuditCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *AuditCommentRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *AuditCommentRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 通过评论审核响应
type AuditCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *AuditCommentResponse) Reset() {
	*x = AuditCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditCommentResponse) ProtoMessage() {}

func (x *AuditCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditCommentResponse.ProtoReflect.Descriptor instead.
func (*AuditCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{17}
}

func (x *AuditCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuditCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论取消审核请求
type UnAuditCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
}

func (x *UnAuditCommentRequest) Reset() {
	*x = UnAuditCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnAuditCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnAuditCommentRequest) ProtoMessage() {}

func (x *UnAuditCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnAuditCommentRequest.ProtoReflect.Descriptor instead.
func (*UnAuditCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{18}
}

func (x *UnAuditCommentRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *UnAuditCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *UnAuditCommentRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *UnAuditCommentRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 评论取消审核响应
type UnAuditCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *UnAuditCommentResponse) Reset() {
	*x = UnAuditCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnAuditCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnAuditCommentResponse) ProtoMessage() {}

func (x *UnAuditCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnAuditCommentResponse.ProtoReflect.Descriptor instead.
func (*UnAuditCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{19}
}

func (x *UnAuditCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnAuditCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论置顶请求
type SetCommentAttrsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
}

func (x *SetCommentAttrsRequest) Reset() {
	*x = SetCommentAttrsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommentAttrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentAttrsRequest) ProtoMessage() {}

func (x *SetCommentAttrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentAttrsRequest.ProtoReflect.Descriptor instead.
func (*SetCommentAttrsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{20}
}

func (x *SetCommentAttrsRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *SetCommentAttrsRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *SetCommentAttrsRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *SetCommentAttrsRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 评论置顶响应
type SetCommentAttrsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *SetCommentAttrsResponse) Reset() {
	*x = SetCommentAttrsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommentAttrsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentAttrsResponse) ProtoMessage() {}

func (x *SetCommentAttrsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentAttrsResponse.ProtoReflect.Descriptor instead.
func (*SetCommentAttrsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{21}
}

func (x *SetCommentAttrsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetCommentAttrsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论取消置顶
type UnSetCommentAttrsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjId     uint64 `protobuf:"varint,1,opt,name=ObjId,proto3" json:"ObjId,omitempty"`         // 评论对象ID
	ObjType   uint64 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`     // 评论对象类型
	CommentId uint64 `protobuf:"varint,3,opt,name=CommentId,proto3" json:"CommentId,omitempty"` // 评论ID
	MemberId  uint64 `protobuf:"varint,4,opt,name=MemberId,proto3" json:"MemberId,omitempty"`   // 用户ID
}

func (x *UnSetCommentAttrsRequest) Reset() {
	*x = UnSetCommentAttrsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnSetCommentAttrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSetCommentAttrsRequest) ProtoMessage() {}

func (x *UnSetCommentAttrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSetCommentAttrsRequest.ProtoReflect.Descriptor instead.
func (*UnSetCommentAttrsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{22}
}

func (x *UnSetCommentAttrsRequest) GetObjId() uint64 {
	if x != nil {
		return x.ObjId
	}
	return 0
}

func (x *UnSetCommentAttrsRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *UnSetCommentAttrsRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *UnSetCommentAttrsRequest) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type UnSetCommentAttrsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` // 是否成功
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`  // 响应消息
}

func (x *UnSetCommentAttrsResponse) Reset() {
	*x = UnSetCommentAttrsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_comment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnSetCommentAttrsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSetCommentAttrsResponse) ProtoMessage() {}

func (x *UnSetCommentAttrsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSetCommentAttrsResponse.ProtoReflect.Descriptor instead.
func (*UnSetCommentAttrsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{23}
}

func (x *UnSetCommentAttrsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnSetCommentAttrsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_rpc_comment_proto protoreflect.FileDescriptor

var file_rpc_comment_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x22, 0xbe, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f,
	0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62,
	0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x61, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f,
	0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x67, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62, 0x6a,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x12, 0x4c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x13, 0x4c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x14, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4f,
	0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x55, 0x6e, 0x4c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4f,
	0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0x4b, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7f, 0x0a,
	0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62,
	0x6a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a,
	0x0a, 0x14, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x55,
	0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62,
	0x6a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c,
	0x0a, 0x16, 0x55, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7f, 0x0a, 0x13,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62, 0x6a,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a,
	0x14, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x55, 0x6e,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62, 0x6a,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4c, 0x0a,
	0x16, 0x55, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x16,
	0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4f, 0x62, 0x6a, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x4f,
	0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x4d, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x84, 0x01, 0x0a, 0x18, 0x55, 0x6e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4f, 0x62, 0x6a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4f, 0x62, 0x6a,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x4f, 0x62, 0x6a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x19, 0x55, 0x6e, 0x53, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xae, 0x09, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56,
	0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x4c,
	0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x59, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a,
	0x0e, 0x55, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x0c, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x55, 0x6e, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x6e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x25, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68,
	0x0a, 0x11, 0x55, 0x6e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_comment_proto_rawDescOnce sync.Once
	file_rpc_comment_proto_rawDescData = file_rpc_comment_proto_rawDesc
)

func file_rpc_comment_proto_rawDescGZIP() []byte {
	file_rpc_comment_proto_rawDescOnce.Do(func() {
		file_rpc_comment_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_comment_proto_rawDescData)
	})
	return file_rpc_comment_proto_rawDescData
}

var file_rpc_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_rpc_comment_proto_goTypes = []any{
	(*CommentRequest)(nil),            // 0: commentclient.CommentRequest
	(*CommentResponse)(nil),           // 1: commentclient.CommentResponse
	(*CommentListRequest)(nil),        // 2: commentclient.CommentListRequest
	(*CommentListResponse)(nil),       // 3: commentclient.CommentListResponse
	(*DeleteCommentRequest)(nil),      // 4: commentclient.DeleteCommentRequest
	(*DeleteCommentResponse)(nil),     // 5: commentclient.DeleteCommentResponse
	(*LikeCommentRequest)(nil),        // 6: commentclient.LikeCommentRequest
	(*LikeCommentResponse)(nil),       // 7: commentclient.LikeCommentResponse
	(*UnLikeCommentRequest)(nil),      // 8: commentclient.UnLikeCommentRequest
	(*UnLikeCommentResponse)(nil),     // 9: commentclient.UnLikeCommentResponse
	(*ReportCommentRequest)(nil),      // 10: commentclient.ReportCommentRequest
	(*ReportCommentResponse)(nil),     // 11: commentclient.ReportCommentResponse
	(*BlockCommentRequest)(nil),       // 12: commentclient.BlockCommentRequest
	(*BlockCommentResponse)(nil),      // 13: commentclient.BlockCommentResponse
	(*UnBlockCommentRequest)(nil),     // 14: commentclient.UnBlockCommentRequest
	(*UnBlockCommentResponse)(nil),    // 15: commentclient.UnBlockCommentResponse
	(*AuditCommentRequest)(nil),       // 16: commentclient.AuditCommentRequest
	(*AuditCommentResponse)(nil),      // 17: commentclient.AuditCommentResponse
	(*UnAuditCommentRequest)(nil),     // 18: commentclient.UnAuditCommentRequest
	(*UnAuditCommentResponse)(nil),    // 19: commentclient.UnAuditCommentResponse
	(*SetCommentAttrsRequest)(nil),    // 20: commentclient.SetCommentAttrsRequest
	(*SetCommentAttrsResponse)(nil),   // 21: commentclient.SetCommentAttrsResponse
	(*UnSetCommentAttrsRequest)(nil),  // 22: commentclient.UnSetCommentAttrsRequest
	(*UnSetCommentAttrsResponse)(nil), // 23: commentclient.UnSetCommentAttrsResponse
}
var file_rpc_comment_proto_depIdxs = []int32{
	1,  // 0: commentclient.CommentListResponse.Comments:type_name -> commentclient.CommentResponse
	0,  // 1: commentclient.Comment.AddComment:input_type -> commentclient.CommentRequest
	0,  // 2: commentclient.Comment.DeleteComment:input_type -> commentclient.CommentRequest
	0,  // 3: commentclient.Comment.GetComment:input_type -> commentclient.CommentRequest
	2,  // 4: commentclient.Comment.GetCommentList:input_type -> commentclient.CommentListRequest
	6,  // 5: commentclient.Comment.LikeComment:input_type -> commentclient.LikeCommentRequest
	8,  // 6: commentclient.Comment.UnLikeComment:input_type -> commentclient.UnLikeCommentRequest
	10, // 7: commentclient.Comment.ReportComment:input_type -> commentclient.ReportCommentRequest
	12, // 8: commentclient.Comment.BlockComment:input_type -> commentclient.BlockCommentRequest
	14, // 9: commentclient.Comment.UnBlockComment:input_type -> commentclient.UnBlockCommentRequest
	16, // 10: commentclient.Comment.AuditComment:input_type -> commentclient.AuditCommentRequest
	18, // 11: commentclient.Comment.UnAuditComment:input_type -> commentclient.UnAuditCommentRequest
	20, // 12: commentclient.Comment.SetCommentAttrs:input_type -> commentclient.SetCommentAttrsRequest
	22, // 13: commentclient.Comment.UnSetCommentAttrs:input_type -> commentclient.UnSetCommentAttrsRequest
	1,  // 14: commentclient.Comment.AddComment:output_type -> commentclient.CommentResponse
	1,  // 15: commentclient.Comment.DeleteComment:output_type -> commentclient.CommentResponse
	1,  // 16: commentclient.Comment.GetComment:output_type -> commentclient.CommentResponse
	3,  // 17: commentclient.Comment.GetCommentList:output_type -> commentclient.CommentListResponse
	7,  // 18: commentclient.Comment.LikeComment:output_type -> commentclient.LikeCommentResponse
	9,  // 19: commentclient.Comment.UnLikeComment:output_type -> commentclient.UnLikeCommentResponse
	11, // 20: commentclient.Comment.ReportComment:output_type -> commentclient.ReportCommentResponse
	13, // 21: commentclient.Comment.BlockComment:output_type -> commentclient.BlockCommentResponse
	15, // 22: commentclient.Comment.UnBlockComment:output_type -> commentclient.UnBlockCommentResponse
	17, // 23: commentclient.Comment.AuditComment:output_type -> commentclient.AuditCommentResponse
	19, // 24: commentclient.Comment.UnAuditComment:output_type -> commentclient.UnAuditCommentResponse
	21, // 25: commentclient.Comment.SetCommentAttrs:output_type -> commentclient.SetCommentAttrsResponse
	23, // 26: commentclient.Comment.UnSetCommentAttrs:output_type -> commentclient.UnSetCommentAttrsResponse
	14, // [14:27] is the sub-list for method output_type
	1,  // [1:14] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_comment_proto_init() }
func file_rpc_comment_proto_init() {
	if File_rpc_comment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_comment_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CommentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*LikeCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*LikeCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UnLikeCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UnLikeCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ReportCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ReportCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*BlockCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*BlockCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UnBlockCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UnBlockCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*AuditCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*AuditCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UnAuditCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*UnAuditCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*SetCommentAttrsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*SetCommentAttrsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UnSetCommentAttrsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_comment_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*UnSetCommentAttrsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_comment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_comment_proto_goTypes,
		DependencyIndexes: file_rpc_comment_proto_depIdxs,
		MessageInfos:      file_rpc_comment_proto_msgTypes,
	}.Build()
	File_rpc_comment_proto = out.File
	file_rpc_comment_proto_rawDesc = nil
	file_rpc_comment_proto_goTypes = nil
	file_rpc_comment_proto_depIdxs = nil
}
