// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.19.4
// source: rpc/comment.proto

package comment

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 用户评论
type CommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`             // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`         // @gotags: json:"obj_type" 评论对象类型
	MemberID      uint64                 `protobuf:"varint,3,opt,name=MemberID,proto3" json:"member_id"`       // @gotags: json:"member_id" 作者用户ID
	CommentID     uint64                 `protobuf:"varint,4,opt,name=CommentID,proto3" json:"comment_id"`     // @gotags: json:"comment_id" 同评论indx_id
	AtMemberIDs   string                 `protobuf:"bytes,5,opt,name=AtMemberIDs,proto3" json:"at_member_ids"` // @gotags: json:"at_member_ids" at用户ID列表
	Ip            string                 `protobuf:"bytes,6,opt,name=Ip,proto3" json:"ip"`                     // @gotags: json:"ip" 评论IP
	Platform      uint64                 `protobuf:"varint,7,opt,name=Platform,proto3" json:"platform"`        // @gotags: json:"platform" 评论平台
	Device        string                 `protobuf:"bytes,8,opt,name=Device,proto3" json:"device"`             // @gotags: json:"device" 评论设备
	Message       string                 `protobuf:"bytes,9,opt,name=Message,proto3" json:"message"`           // @gotags: json:"message" 评论内容
	Meta          string                 `protobuf:"bytes,10,opt,name=Meta,proto3" json:"meta"`                // @gotags: json:"meta" 评论元数据 背景 字体
	ReplyID       uint64                 `protobuf:"varint,11,opt,name=ReplyID,proto3" json:"reply_id"`        // @gotags: json:"reply_id" 被回复的评论ID
	State         uint64                 `protobuf:"varint,12,opt,name=State,proto3" json:"state"`             // @gotags: json:"state" 评论状态 0-正常, 1-隐藏
	RootID        uint64                 `protobuf:"varint,13,opt,name=RootID,proto3" json:"root_id"`          // @gotags: json:"root_id" 根评论id 不为0则为回复一级评论
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentRequest) Reset() {
	*x = CommentRequest{}
	mi := &file_rpc_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentRequest) ProtoMessage() {}

func (x *CommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentRequest.ProtoReflect.Descriptor instead.
func (*CommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{0}
}

func (x *CommentRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *CommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *CommentRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

func (x *CommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *CommentRequest) GetAtMemberIDs() string {
	if x != nil {
		return x.AtMemberIDs
	}
	return ""
}

func (x *CommentRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CommentRequest) GetPlatform() uint64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *CommentRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *CommentRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommentRequest) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *CommentRequest) GetReplyID() uint64 {
	if x != nil {
		return x.ReplyID
	}
	return 0
}

func (x *CommentRequest) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CommentRequest) GetRootID() uint64 {
	if x != nil {
		return x.RootID
	}
	return 0
}

// 评论响应
type CommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"ObjID,omitempty"`            // go tag: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"ObjType,omitempty"`        // go tag: json:"obj_type" 评论对象类型
	MemberID      uint64                 `protobuf:"varint,3,opt,name=MemberID,proto3" json:"MemberID,omitempty"`      // go tag: json:"member_id" 作者用户ID
	CommentID     uint64                 `protobuf:"varint,4,opt,name=CommentID,proto3" json:"CommentID,omitempty"`    // go tag: json:"comment_id" 同评论indx_id
	AtMemberIDs   string                 `protobuf:"bytes,5,opt,name=AtMemberIDs,proto3" json:"AtMemberIDs,omitempty"` // go tag: json:"at_member_ids" at用户ID列表
	Ip            string                 `protobuf:"bytes,6,opt,name=Ip,proto3" json:"Ip,omitempty"`                   // go tag: json:"ip" 评论IP
	Platform      uint64                 `protobuf:"varint,7,opt,name=Platform,proto3" json:"Platform,omitempty"`      // go tag: json:"platform" 评论平台
	Device        string                 `protobuf:"bytes,8,opt,name=Device,proto3" json:"Device,omitempty"`           // go tag: json:"device" 评论设备
	Message       string                 `protobuf:"bytes,9,opt,name=Message,proto3" json:"Message,omitempty"`         // go tag: json:"message" 评论内容
	Meta          string                 `protobuf:"bytes,10,opt,name=Meta,proto3" json:"Meta,omitempty"`              // go tag: json:"meta" 评论元数据 背景 字体
	ReplyID       uint64                 `protobuf:"varint,11,opt,name=ReplyID,proto3" json:"ReplyID,omitempty"`       // go tag: json:"reply_id" 被回复的评论ID
	State         uint64                 `protobuf:"varint,12,opt,name=State,proto3" json:"State,omitempty"`           // go tag: json:"state" 评论状态 0-正常, 1-隐藏
	RootID        uint64                 `protobuf:"varint,13,opt,name=RootID,proto3" json:"RootID,omitempty"`         // go tag: json:"root_id" 根评论id 不为0则为回复一级评论
	CreatedAt     uint64                 `protobuf:"varint,14,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`   // go tag: json:"created_at" 创建时间
	Floor         uint64                 `protobuf:"varint,15,opt,name=Floor,proto3" json:"Floor,omitempty"`           // go tag: json:"floor" 楼层
	LikeCount     uint64                 `protobuf:"varint,16,opt,name=LikeCount,proto3" json:"LikeCount,omitempty"`   // go tag: json:"like_count" 点赞数
	HateCount     uint64                 `protobuf:"varint,17,opt,name=HateCount,proto3" json:"HateCount,omitempty"`   // go tag: json:"hate_count" 踩数
	Count         uint64                 `protobuf:"varint,18,opt,name=Count,proto3" json:"Count,omitempty"`           // go tag: json:"count" 评论数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentResponse) Reset() {
	*x = CommentResponse{}
	mi := &file_rpc_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentResponse) ProtoMessage() {}

func (x *CommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentResponse.ProtoReflect.Descriptor instead.
func (*CommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CommentResponse) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *CommentResponse) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *CommentResponse) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

func (x *CommentResponse) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *CommentResponse) GetAtMemberIDs() string {
	if x != nil {
		return x.AtMemberIDs
	}
	return ""
}

func (x *CommentResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *CommentResponse) GetPlatform() uint64 {
	if x != nil {
		return x.Platform
	}
	return 0
}

func (x *CommentResponse) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *CommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommentResponse) GetMeta() string {
	if x != nil {
		return x.Meta
	}
	return ""
}

func (x *CommentResponse) GetReplyID() uint64 {
	if x != nil {
		return x.ReplyID
	}
	return 0
}

func (x *CommentResponse) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CommentResponse) GetRootID() uint64 {
	if x != nil {
		return x.RootID
	}
	return 0
}

func (x *CommentResponse) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CommentResponse) GetFloor() uint64 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *CommentResponse) GetLikeCount() uint64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *CommentResponse) GetHateCount() uint64 {
	if x != nil {
		return x.HateCount
	}
	return 0
}

func (x *CommentResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 评论列表请求
type CommentListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`              // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`          // @gotags: json:"obj_type" 评论对象类型
	MemberID      uint64                 `protobuf:"varint,3,opt,name=MemberID,proto3" json:"member_id"`        // @gotags: json:"member_id" 作者用户ID
	Cursor        uint64                 `protobuf:"varint,4,opt,name=Cursor,proto3" json:"cursor"`             // @gotags: json:"cursor" cursor游标 排序数据游标
	PageSize      uint64                 `protobuf:"varint,5,opt,name=PageSize,proto3" json:"page_size"`        // @gotags: json:"page_size" 页大小
	SortType      uint64                 `protobuf:"varint,6,opt,name=SortType,proto3" json:"sort_type"`        // @gotags: json:"sort_type" 排序方式 0-默认, 1-点赞数, 2-评论时间
	State         uint64                 `protobuf:"varint,7,opt,name=State,proto3" json:"state"`               // @gotags: json:"state" 评论状态 0-正常, 1-隐藏
	RootID        uint64                 `protobuf:"varint,8,opt,name=RootID,proto3" json:"root_id"`            // @gotags: json:"root_id" 根评论ID 不为0则为回复一级评论
	ReplyID       uint64                 `protobuf:"varint,11,opt,name=ReplyID,proto3" json:"reply_id"`         // @gotags: json:"reply_id" 被回复的评论ID
	SortedField   uint64                 `protobuf:"varint,12,opt,name=SortedField,proto3" json:"sorted_field"` // @gotags: json:"sorted_field" 排序字段
	CreatedAt     uint64                 `protobuf:"varint,13,opt,name=CreatedAt,proto3" json:"created_at"`     // @gotags: json:"created_at" 创建时间
	Floor         uint64                 `protobuf:"varint,14,opt,name=Floor,proto3" json:"floor"`              // @gotags: json:"floor" 楼层
	LikeCount     uint64                 `protobuf:"varint,15,opt,name=LikeCount,proto3" json:"like_count"`     // @gotags: json:"like_count" 点赞数
	HateCount     uint64                 `protobuf:"varint,16,opt,name=HateCount,proto3" json:"hate_count"`     // @gotags: json:"hate_count" 踩数
	Count         uint64                 `protobuf:"varint,17,opt,name=Count,proto3" json:"count"`              // @gotags: json:"count" 评论数
	CommentID     uint64                 `protobuf:"varint,18,opt,name=CommentID,proto3" json:"comment_id"`     // @gotags: json:"comment_id" 评论ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentListRequest) Reset() {
	*x = CommentListRequest{}
	mi := &file_rpc_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListRequest) ProtoMessage() {}

func (x *CommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListRequest.ProtoReflect.Descriptor instead.
func (*CommentListRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{2}
}

func (x *CommentListRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *CommentListRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *CommentListRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

func (x *CommentListRequest) GetCursor() uint64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *CommentListRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *CommentListRequest) GetSortType() uint64 {
	if x != nil {
		return x.SortType
	}
	return 0
}

func (x *CommentListRequest) GetState() uint64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CommentListRequest) GetRootID() uint64 {
	if x != nil {
		return x.RootID
	}
	return 0
}

func (x *CommentListRequest) GetReplyID() uint64 {
	if x != nil {
		return x.ReplyID
	}
	return 0
}

func (x *CommentListRequest) GetSortedField() uint64 {
	if x != nil {
		return x.SortedField
	}
	return 0
}

func (x *CommentListRequest) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CommentListRequest) GetFloor() uint64 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *CommentListRequest) GetLikeCount() uint64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *CommentListRequest) GetHateCount() uint64 {
	if x != nil {
		return x.HateCount
	}
	return 0
}

func (x *CommentListRequest) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CommentListRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

// 评论列表响应
type CommentListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*CommentResponse     `protobuf:"bytes,1,rep,name=Comments,proto3" json:"comments"` // @gotags: json:"comments" 评论列表
	IsEnd         bool                   `protobuf:"varint,2,opt,name=isEnd,proto3" json:"is_end"`     // @gotags: json:"is_end" 是否结束
	Cursor        int64                  `protobuf:"varint,3,opt,name=cursor,proto3" json:"cursor"`    // @gotags: json:"cursor" 游标
	LastID        int64                  `protobuf:"varint,4,opt,name=lastID,proto3" json:"last_id"`   // @gotags: json:"last_id" 最后一条评论ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentListResponse) Reset() {
	*x = CommentListResponse{}
	mi := &file_rpc_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentListResponse) ProtoMessage() {}

func (x *CommentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentListResponse.ProtoReflect.Descriptor instead.
func (*CommentListResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{3}
}

func (x *CommentListResponse) GetComments() []*CommentResponse {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *CommentListResponse) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *CommentListResponse) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *CommentListResponse) GetLastID() int64 {
	if x != nil {
		return x.LastID
	}
	return 0
}

// 删除评论请求
type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`         // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`     // @gotags: json:"obj_type" 评论对象类型
	CommentID     uint64                 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"comment_id"` // @gotags: json:"comment_id" 评论ID
	MemberID      uint64                 `protobuf:"varint,4,opt,name=MemberID,proto3" json:"member_id"`   // @gotags: json:"member_id" 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_rpc_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCommentRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *DeleteCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *DeleteCommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *DeleteCommentRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

// 删除评论响应
type DeleteCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"success"` // @gotags: json:"success" 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`  // @gotags: json:"message" 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_rpc_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论点赞
type LikeCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`         // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`     // @gotags: json:"obj_type" 评论对象类型
	CommentID     uint64                 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"comment_id"` // @gotags: json:"comment_id" 评论ID
	MemberID      uint64                 `protobuf:"varint,4,opt,name=MemberID,proto3" json:"member_id"`   // @gotags: json:"member_id" 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentRequest) Reset() {
	*x = LikeCommentRequest{}
	mi := &file_rpc_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentRequest) ProtoMessage() {}

func (x *LikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentRequest.ProtoReflect.Descriptor instead.
func (*LikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{6}
}

func (x *LikeCommentRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *LikeCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *LikeCommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *LikeCommentRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

// 评论点赞响应
type LikeCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"success"` // @gotags: json:"success" 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`  // @gotags: json:"message" 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentResponse) Reset() {
	*x = LikeCommentResponse{}
	mi := &file_rpc_comment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentResponse) ProtoMessage() {}

func (x *LikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentResponse.ProtoReflect.Descriptor instead.
func (*LikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{7}
}

func (x *LikeCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LikeCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论取消点赞请求
type UnLikeCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`         // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`     // @gotags: json:"obj_type" 评论对象类型
	CommentID     uint64                 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"comment_id"` // @gotags: json:"comment_id" 评论ID
	MemberID      uint64                 `protobuf:"varint,4,opt,name=MemberID,proto3" json:"member_id"`   // @gotags: json:"member_id" 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnLikeCommentRequest) Reset() {
	*x = UnLikeCommentRequest{}
	mi := &file_rpc_comment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnLikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLikeCommentRequest) ProtoMessage() {}

func (x *UnLikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLikeCommentRequest.ProtoReflect.Descriptor instead.
func (*UnLikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{8}
}

func (x *UnLikeCommentRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *UnLikeCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *UnLikeCommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *UnLikeCommentRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

// 评论取消点赞响应
type UnLikeCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"success"` // @gotags: json:"success" 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`  // @gotags: json:"message" 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnLikeCommentResponse) Reset() {
	*x = UnLikeCommentResponse{}
	mi := &file_rpc_comment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnLikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnLikeCommentResponse) ProtoMessage() {}

func (x *UnLikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnLikeCommentResponse.ProtoReflect.Descriptor instead.
func (*UnLikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{9}
}

func (x *UnLikeCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnLikeCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论屏蔽请求
type BlockCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`         // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`     // @gotags: json:"obj_type" 评论对象类型
	CommentID     uint64                 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"comment_id"` // @gotags: json:"comment_id" 评论ID
	MemberID      uint64                 `protobuf:"varint,4,opt,name=MemberID,proto3" json:"member_id"`   // @gotags: json:"member_id" 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockCommentRequest) Reset() {
	*x = BlockCommentRequest{}
	mi := &file_rpc_comment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockCommentRequest) ProtoMessage() {}

func (x *BlockCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockCommentRequest.ProtoReflect.Descriptor instead.
func (*BlockCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{10}
}

func (x *BlockCommentRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *BlockCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *BlockCommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *BlockCommentRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

// 评论屏蔽响应
type BlockCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"success"` // @gotags: json:"success" 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`  // @gotags: json:"message" 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockCommentResponse) Reset() {
	*x = BlockCommentResponse{}
	mi := &file_rpc_comment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockCommentResponse) ProtoMessage() {}

func (x *BlockCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockCommentResponse.ProtoReflect.Descriptor instead.
func (*BlockCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{11}
}

func (x *BlockCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BlockCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论取消屏蔽请求
type UnBlockCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`         // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`     // @gotags: json:"obj_type" 评论对象类型
	CommentID     uint64                 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"comment_id"` // @gotags: json:"comment_id" 评论ID
	MemberID      uint64                 `protobuf:"varint,4,opt,name=MemberID,proto3" json:"member_id"`   // @gotags: json:"member_id" 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnBlockCommentRequest) Reset() {
	*x = UnBlockCommentRequest{}
	mi := &file_rpc_comment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnBlockCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBlockCommentRequest) ProtoMessage() {}

func (x *UnBlockCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBlockCommentRequest.ProtoReflect.Descriptor instead.
func (*UnBlockCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{12}
}

func (x *UnBlockCommentRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *UnBlockCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *UnBlockCommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *UnBlockCommentRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

// 评论取消屏蔽响应
type UnBlockCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"success"` // @gotags: json:"success" 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`  // @gotags: json:"message" 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnBlockCommentResponse) Reset() {
	*x = UnBlockCommentResponse{}
	mi := &file_rpc_comment_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnBlockCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnBlockCommentResponse) ProtoMessage() {}

func (x *UnBlockCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnBlockCommentResponse.ProtoReflect.Descriptor instead.
func (*UnBlockCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{13}
}

func (x *UnBlockCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnBlockCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 通过评论审核请求
type AuditCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`         // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`     // @gotags: json:"obj_type" 评论对象类型
	CommentID     uint64                 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"comment_id"` // @gotags: json:"comment_id" 评论ID
	MemberID      uint64                 `protobuf:"varint,4,opt,name=MemberID,proto3" json:"member_id"`   // @gotags: json:"member_id" 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditCommentRequest) Reset() {
	*x = AuditCommentRequest{}
	mi := &file_rpc_comment_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditCommentRequest) ProtoMessage() {}

func (x *AuditCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditCommentRequest.ProtoReflect.Descriptor instead.
func (*AuditCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{14}
}

func (x *AuditCommentRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *AuditCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *AuditCommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *AuditCommentRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

// 通过评论审核响应
type AuditCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"success"` // @gotags: json:"success" 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`  // @gotags: json:"message" 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditCommentResponse) Reset() {
	*x = AuditCommentResponse{}
	mi := &file_rpc_comment_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditCommentResponse) ProtoMessage() {}

func (x *AuditCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditCommentResponse.ProtoReflect.Descriptor instead.
func (*AuditCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{15}
}

func (x *AuditCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuditCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论取消审核请求
type UnAuditCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`         // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`     // @gotags: json:"obj_type" 评论对象类型
	CommentID     uint64                 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"comment_id"` // @gotags: json:"comment_id" 评论ID
	MemberID      uint64                 `protobuf:"varint,4,opt,name=MemberID,proto3" json:"member_id"`   // @gotags: json:"member_id" 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnAuditCommentRequest) Reset() {
	*x = UnAuditCommentRequest{}
	mi := &file_rpc_comment_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnAuditCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnAuditCommentRequest) ProtoMessage() {}

func (x *UnAuditCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnAuditCommentRequest.ProtoReflect.Descriptor instead.
func (*UnAuditCommentRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{16}
}

func (x *UnAuditCommentRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *UnAuditCommentRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *UnAuditCommentRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *UnAuditCommentRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

// 评论取消审核响应
type UnAuditCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"success"` // @gotags: json:"success" 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`  // @gotags: json:"message" 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnAuditCommentResponse) Reset() {
	*x = UnAuditCommentResponse{}
	mi := &file_rpc_comment_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnAuditCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnAuditCommentResponse) ProtoMessage() {}

func (x *UnAuditCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnAuditCommentResponse.ProtoReflect.Descriptor instead.
func (*UnAuditCommentResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{17}
}

func (x *UnAuditCommentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnAuditCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论置顶请求
type SetCommentAttrsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`         // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`     // @gotags: json:"obj_type" 评论对象类型
	CommentID     uint64                 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"comment_id"` // @gotags: json:"comment_id" 评论ID
	MemberID      uint64                 `protobuf:"varint,4,opt,name=MemberID,proto3" json:"member_id"`   // @gotags: json:"member_id" 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCommentAttrsRequest) Reset() {
	*x = SetCommentAttrsRequest{}
	mi := &file_rpc_comment_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCommentAttrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentAttrsRequest) ProtoMessage() {}

func (x *SetCommentAttrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentAttrsRequest.ProtoReflect.Descriptor instead.
func (*SetCommentAttrsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{18}
}

func (x *SetCommentAttrsRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *SetCommentAttrsRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *SetCommentAttrsRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *SetCommentAttrsRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

// 评论置顶响应
type SetCommentAttrsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"success"` // @gotags: json:"success" 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`  // @gotags: json:"message" 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCommentAttrsResponse) Reset() {
	*x = SetCommentAttrsResponse{}
	mi := &file_rpc_comment_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCommentAttrsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommentAttrsResponse) ProtoMessage() {}

func (x *SetCommentAttrsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommentAttrsResponse.ProtoReflect.Descriptor instead.
func (*SetCommentAttrsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{19}
}

func (x *SetCommentAttrsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetCommentAttrsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 评论取消置顶
type UnSetCommentAttrsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjID         uint64                 `protobuf:"varint,1,opt,name=ObjID,proto3" json:"obj_id"`         // @gotags: json:"obj_id" 评论对象ID
	ObjType       uint64                 `protobuf:"varint,2,opt,name=ObjType,proto3" json:"obj_type"`     // @gotags: json:"obj_type" 评论对象类型
	CommentID     uint64                 `protobuf:"varint,3,opt,name=CommentID,proto3" json:"comment_id"` // @gotags: json:"comment_id" 评论ID
	MemberID      uint64                 `protobuf:"varint,4,opt,name=MemberID,proto3" json:"member_id"`   // @gotags: json:"member_id" 用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnSetCommentAttrsRequest) Reset() {
	*x = UnSetCommentAttrsRequest{}
	mi := &file_rpc_comment_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnSetCommentAttrsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSetCommentAttrsRequest) ProtoMessage() {}

func (x *UnSetCommentAttrsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSetCommentAttrsRequest.ProtoReflect.Descriptor instead.
func (*UnSetCommentAttrsRequest) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{20}
}

func (x *UnSetCommentAttrsRequest) GetObjID() uint64 {
	if x != nil {
		return x.ObjID
	}
	return 0
}

func (x *UnSetCommentAttrsRequest) GetObjType() uint64 {
	if x != nil {
		return x.ObjType
	}
	return 0
}

func (x *UnSetCommentAttrsRequest) GetCommentID() uint64 {
	if x != nil {
		return x.CommentID
	}
	return 0
}

func (x *UnSetCommentAttrsRequest) GetMemberID() uint64 {
	if x != nil {
		return x.MemberID
	}
	return 0
}

type UnSetCommentAttrsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=Success,proto3" json:"success"` // @gotags: json:"success" 是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"message"`  // @gotags: json:"message" 响应消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnSetCommentAttrsResponse) Reset() {
	*x = UnSetCommentAttrsResponse{}
	mi := &file_rpc_comment_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnSetCommentAttrsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnSetCommentAttrsResponse) ProtoMessage() {}

func (x *UnSetCommentAttrsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_comment_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnSetCommentAttrsResponse.ProtoReflect.Descriptor instead.
func (*UnSetCommentAttrsResponse) Descriptor() ([]byte, []int) {
	return file_rpc_comment_proto_rawDescGZIP(), []int{21}
}

func (x *UnSetCommentAttrsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnSetCommentAttrsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_rpc_comment_proto protoreflect.FileDescriptor

const file_rpc_comment_proto_rawDesc = "" +
	"\n" +
	"\x11rpc/comment.proto\x12\rcommentclient\"\xd6\x02\n" +
	"\x0eCommentRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1a\n" +
	"\bMemberID\x18\x03 \x01(\x04R\bMemberID\x12\x1c\n" +
	"\tCommentID\x18\x04 \x01(\x04R\tCommentID\x12 \n" +
	"\vAtMemberIDs\x18\x05 \x01(\tR\vAtMemberIDs\x12\x0e\n" +
	"\x02Ip\x18\x06 \x01(\tR\x02Ip\x12\x1a\n" +
	"\bPlatform\x18\a \x01(\x04R\bPlatform\x12\x16\n" +
	"\x06Device\x18\b \x01(\tR\x06Device\x12\x18\n" +
	"\aMessage\x18\t \x01(\tR\aMessage\x12\x12\n" +
	"\x04Meta\x18\n" +
	" \x01(\tR\x04Meta\x12\x18\n" +
	"\aReplyID\x18\v \x01(\x04R\aReplyID\x12\x14\n" +
	"\x05State\x18\f \x01(\x04R\x05State\x12\x16\n" +
	"\x06RootID\x18\r \x01(\x04R\x06RootID\"\xdd\x03\n" +
	"\x0fCommentResponse\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1a\n" +
	"\bMemberID\x18\x03 \x01(\x04R\bMemberID\x12\x1c\n" +
	"\tCommentID\x18\x04 \x01(\x04R\tCommentID\x12 \n" +
	"\vAtMemberIDs\x18\x05 \x01(\tR\vAtMemberIDs\x12\x0e\n" +
	"\x02Ip\x18\x06 \x01(\tR\x02Ip\x12\x1a\n" +
	"\bPlatform\x18\a \x01(\x04R\bPlatform\x12\x16\n" +
	"\x06Device\x18\b \x01(\tR\x06Device\x12\x18\n" +
	"\aMessage\x18\t \x01(\tR\aMessage\x12\x12\n" +
	"\x04Meta\x18\n" +
	" \x01(\tR\x04Meta\x12\x18\n" +
	"\aReplyID\x18\v \x01(\x04R\aReplyID\x12\x14\n" +
	"\x05State\x18\f \x01(\x04R\x05State\x12\x16\n" +
	"\x06RootID\x18\r \x01(\x04R\x06RootID\x12\x1c\n" +
	"\tCreatedAt\x18\x0e \x01(\x04R\tCreatedAt\x12\x14\n" +
	"\x05Floor\x18\x0f \x01(\x04R\x05Floor\x12\x1c\n" +
	"\tLikeCount\x18\x10 \x01(\x04R\tLikeCount\x12\x1c\n" +
	"\tHateCount\x18\x11 \x01(\x04R\tHateCount\x12\x14\n" +
	"\x05Count\x18\x12 \x01(\x04R\x05Count\"\xbe\x03\n" +
	"\x12CommentListRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1a\n" +
	"\bMemberID\x18\x03 \x01(\x04R\bMemberID\x12\x16\n" +
	"\x06Cursor\x18\x04 \x01(\x04R\x06Cursor\x12\x1a\n" +
	"\bPageSize\x18\x05 \x01(\x04R\bPageSize\x12\x1a\n" +
	"\bSortType\x18\x06 \x01(\x04R\bSortType\x12\x14\n" +
	"\x05State\x18\a \x01(\x04R\x05State\x12\x16\n" +
	"\x06RootID\x18\b \x01(\x04R\x06RootID\x12\x18\n" +
	"\aReplyID\x18\v \x01(\x04R\aReplyID\x12 \n" +
	"\vSortedField\x18\f \x01(\x04R\vSortedField\x12\x1c\n" +
	"\tCreatedAt\x18\r \x01(\x04R\tCreatedAt\x12\x14\n" +
	"\x05Floor\x18\x0e \x01(\x04R\x05Floor\x12\x1c\n" +
	"\tLikeCount\x18\x0f \x01(\x04R\tLikeCount\x12\x1c\n" +
	"\tHateCount\x18\x10 \x01(\x04R\tHateCount\x12\x14\n" +
	"\x05Count\x18\x11 \x01(\x04R\x05Count\x12\x1c\n" +
	"\tCommentID\x18\x12 \x01(\x04R\tCommentID\"\x97\x01\n" +
	"\x13CommentListResponse\x12:\n" +
	"\bComments\x18\x01 \x03(\v2\x1e.commentclient.CommentResponseR\bComments\x12\x14\n" +
	"\x05isEnd\x18\x02 \x01(\bR\x05isEnd\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\x03R\x06cursor\x12\x16\n" +
	"\x06lastID\x18\x04 \x01(\x03R\x06lastID\"\x80\x01\n" +
	"\x14DeleteCommentRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1c\n" +
	"\tCommentID\x18\x03 \x01(\x04R\tCommentID\x12\x1a\n" +
	"\bMemberID\x18\x04 \x01(\x04R\bMemberID\"K\n" +
	"\x15DeleteCommentResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"~\n" +
	"\x12LikeCommentRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1c\n" +
	"\tCommentID\x18\x03 \x01(\x04R\tCommentID\x12\x1a\n" +
	"\bMemberID\x18\x04 \x01(\x04R\bMemberID\"I\n" +
	"\x13LikeCommentResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"\x80\x01\n" +
	"\x14UnLikeCommentRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1c\n" +
	"\tCommentID\x18\x03 \x01(\x04R\tCommentID\x12\x1a\n" +
	"\bMemberID\x18\x04 \x01(\x04R\bMemberID\"K\n" +
	"\x15UnLikeCommentResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"\x7f\n" +
	"\x13BlockCommentRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1c\n" +
	"\tCommentID\x18\x03 \x01(\x04R\tCommentID\x12\x1a\n" +
	"\bMemberID\x18\x04 \x01(\x04R\bMemberID\"J\n" +
	"\x14BlockCommentResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"\x81\x01\n" +
	"\x15UnBlockCommentRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1c\n" +
	"\tCommentID\x18\x03 \x01(\x04R\tCommentID\x12\x1a\n" +
	"\bMemberID\x18\x04 \x01(\x04R\bMemberID\"L\n" +
	"\x16UnBlockCommentResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"\x7f\n" +
	"\x13AuditCommentRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1c\n" +
	"\tCommentID\x18\x03 \x01(\x04R\tCommentID\x12\x1a\n" +
	"\bMemberID\x18\x04 \x01(\x04R\bMemberID\"J\n" +
	"\x14AuditCommentResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"\x81\x01\n" +
	"\x15UnAuditCommentRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1c\n" +
	"\tCommentID\x18\x03 \x01(\x04R\tCommentID\x12\x1a\n" +
	"\bMemberID\x18\x04 \x01(\x04R\bMemberID\"L\n" +
	"\x16UnAuditCommentResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"\x82\x01\n" +
	"\x16SetCommentAttrsRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1c\n" +
	"\tCommentID\x18\x03 \x01(\x04R\tCommentID\x12\x1a\n" +
	"\bMemberID\x18\x04 \x01(\x04R\bMemberID\"M\n" +
	"\x17SetCommentAttrsResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"\x84\x01\n" +
	"\x18UnSetCommentAttrsRequest\x12\x14\n" +
	"\x05ObjID\x18\x01 \x01(\x04R\x05ObjID\x12\x18\n" +
	"\aObjType\x18\x02 \x01(\x04R\aObjType\x12\x1c\n" +
	"\tCommentID\x18\x03 \x01(\x04R\tCommentID\x12\x1a\n" +
	"\bMemberID\x18\x04 \x01(\x04R\bMemberID\"O\n" +
	"\x19UnSetCommentAttrsResponse\x12\x18\n" +
	"\aSuccess\x18\x01 \x01(\bR\aSuccess\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage2\x94\a\n" +
	"\aComment\x12M\n" +
	"\n" +
	"AddComment\x12\x1d.commentclient.CommentRequest\x1a\x1e.commentclient.CommentResponse\"\x00\x12P\n" +
	"\rDeleteComment\x12\x1d.commentclient.CommentRequest\x1a\x1e.commentclient.CommentResponse\"\x00\x12M\n" +
	"\n" +
	"GetComment\x12\x1d.commentclient.CommentRequest\x1a\x1e.commentclient.CommentResponse\"\x00\x12Y\n" +
	"\x0eGetCommentList\x12!.commentclient.CommentListRequest\x1a\".commentclient.CommentListResponse\"\x00\x12V\n" +
	"\vLikeComment\x12!.commentclient.LikeCommentRequest\x1a\".commentclient.LikeCommentResponse\"\x00\x12\\\n" +
	"\rUnLikeComment\x12#.commentclient.UnLikeCommentRequest\x1a$.commentclient.UnLikeCommentResponse\"\x00\x12Y\n" +
	"\fBlockComment\x12\".commentclient.BlockCommentRequest\x1a#.commentclient.BlockCommentResponse\"\x00\x12_\n" +
	"\x0eUnBlockComment\x12$.commentclient.UnBlockCommentRequest\x1a%.commentclient.UnBlockCommentResponse\"\x00\x12b\n" +
	"\x0fSetCommentAttrs\x12%.commentclient.SetCommentAttrsRequest\x1a&.commentclient.SetCommentAttrsResponse\"\x00\x12h\n" +
	"\x11UnSetCommentAttrs\x12'.commentclient.UnSetCommentAttrsRequest\x1a(.commentclient.UnSetCommentAttrsResponse\"\x00B\n" +
	"Z\b/commentb\x06proto3"

var (
	file_rpc_comment_proto_rawDescOnce sync.Once
	file_rpc_comment_proto_rawDescData []byte
)

func file_rpc_comment_proto_rawDescGZIP() []byte {
	file_rpc_comment_proto_rawDescOnce.Do(func() {
		file_rpc_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rpc_comment_proto_rawDesc), len(file_rpc_comment_proto_rawDesc)))
	})
	return file_rpc_comment_proto_rawDescData
}

var file_rpc_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_rpc_comment_proto_goTypes = []any{
	(*CommentRequest)(nil),            // 0: commentclient.CommentRequest
	(*CommentResponse)(nil),           // 1: commentclient.CommentResponse
	(*CommentListRequest)(nil),        // 2: commentclient.CommentListRequest
	(*CommentListResponse)(nil),       // 3: commentclient.CommentListResponse
	(*DeleteCommentRequest)(nil),      // 4: commentclient.DeleteCommentRequest
	(*DeleteCommentResponse)(nil),     // 5: commentclient.DeleteCommentResponse
	(*LikeCommentRequest)(nil),        // 6: commentclient.LikeCommentRequest
	(*LikeCommentResponse)(nil),       // 7: commentclient.LikeCommentResponse
	(*UnLikeCommentRequest)(nil),      // 8: commentclient.UnLikeCommentRequest
	(*UnLikeCommentResponse)(nil),     // 9: commentclient.UnLikeCommentResponse
	(*BlockCommentRequest)(nil),       // 10: commentclient.BlockCommentRequest
	(*BlockCommentResponse)(nil),      // 11: commentclient.BlockCommentResponse
	(*UnBlockCommentRequest)(nil),     // 12: commentclient.UnBlockCommentRequest
	(*UnBlockCommentResponse)(nil),    // 13: commentclient.UnBlockCommentResponse
	(*AuditCommentRequest)(nil),       // 14: commentclient.AuditCommentRequest
	(*AuditCommentResponse)(nil),      // 15: commentclient.AuditCommentResponse
	(*UnAuditCommentRequest)(nil),     // 16: commentclient.UnAuditCommentRequest
	(*UnAuditCommentResponse)(nil),    // 17: commentclient.UnAuditCommentResponse
	(*SetCommentAttrsRequest)(nil),    // 18: commentclient.SetCommentAttrsRequest
	(*SetCommentAttrsResponse)(nil),   // 19: commentclient.SetCommentAttrsResponse
	(*UnSetCommentAttrsRequest)(nil),  // 20: commentclient.UnSetCommentAttrsRequest
	(*UnSetCommentAttrsResponse)(nil), // 21: commentclient.UnSetCommentAttrsResponse
}
var file_rpc_comment_proto_depIdxs = []int32{
	1,  // 0: commentclient.CommentListResponse.Comments:type_name -> commentclient.CommentResponse
	0,  // 1: commentclient.Comment.AddComment:input_type -> commentclient.CommentRequest
	0,  // 2: commentclient.Comment.DeleteComment:input_type -> commentclient.CommentRequest
	0,  // 3: commentclient.Comment.GetComment:input_type -> commentclient.CommentRequest
	2,  // 4: commentclient.Comment.GetCommentList:input_type -> commentclient.CommentListRequest
	6,  // 5: commentclient.Comment.LikeComment:input_type -> commentclient.LikeCommentRequest
	8,  // 6: commentclient.Comment.UnLikeComment:input_type -> commentclient.UnLikeCommentRequest
	10, // 7: commentclient.Comment.BlockComment:input_type -> commentclient.BlockCommentRequest
	12, // 8: commentclient.Comment.UnBlockComment:input_type -> commentclient.UnBlockCommentRequest
	18, // 9: commentclient.Comment.SetCommentAttrs:input_type -> commentclient.SetCommentAttrsRequest
	20, // 10: commentclient.Comment.UnSetCommentAttrs:input_type -> commentclient.UnSetCommentAttrsRequest
	1,  // 11: commentclient.Comment.AddComment:output_type -> commentclient.CommentResponse
	1,  // 12: commentclient.Comment.DeleteComment:output_type -> commentclient.CommentResponse
	1,  // 13: commentclient.Comment.GetComment:output_type -> commentclient.CommentResponse
	3,  // 14: commentclient.Comment.GetCommentList:output_type -> commentclient.CommentListResponse
	7,  // 15: commentclient.Comment.LikeComment:output_type -> commentclient.LikeCommentResponse
	9,  // 16: commentclient.Comment.UnLikeComment:output_type -> commentclient.UnLikeCommentResponse
	11, // 17: commentclient.Comment.BlockComment:output_type -> commentclient.BlockCommentResponse
	13, // 18: commentclient.Comment.UnBlockComment:output_type -> commentclient.UnBlockCommentResponse
	19, // 19: commentclient.Comment.SetCommentAttrs:output_type -> commentclient.SetCommentAttrsResponse
	21, // 20: commentclient.Comment.UnSetCommentAttrs:output_type -> commentclient.UnSetCommentAttrsResponse
	11, // [11:21] is the sub-list for method output_type
	1,  // [1:11] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_rpc_comment_proto_init() }
func file_rpc_comment_proto_init() {
	if File_rpc_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rpc_comment_proto_rawDesc), len(file_rpc_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_comment_proto_goTypes,
		DependencyIndexes: file_rpc_comment_proto_depIdxs,
		MessageInfos:      file_rpc_comment_proto_msgTypes,
	}.Build()
	File_rpc_comment_proto = out.File
	file_rpc_comment_proto_goTypes = nil
	file_rpc_comment_proto_depIdxs = nil
}
